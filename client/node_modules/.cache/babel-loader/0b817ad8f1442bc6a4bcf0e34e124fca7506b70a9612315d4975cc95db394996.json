{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\saksh\\\\Downloads\\\\FLASK-REACT-TODO\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql, useMutation, useQuery } from '@apollo/client';\nimport Keycloak from 'keycloak-js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: 'http://localhost:5000/graphql',\n  cache: new InMemoryCache()\n});\nconst GET_TODOS = gql`\n  query {\n    todos {\n      id\n      title\n      description\n      time\n      image\n    }\n  }\n`;\nconst ADD_TODO = gql`\n  mutation AddTodo($title: String!, $description: String!, $time: DateTime!, $image: String) {\n    addTodo(title: $title, description: $description, time: $time, image: $image) {\n      id\n      title\n      description\n      time\n      image\n    }\n  }\n`;\nfunction TodoList() {\n  _s();\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(GET_TODOS);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \" Loading... \"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\" Error: \", error.message, \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\" \", data.todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\" \", todo.title, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", todo.description, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 48\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", todo.time, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 52\n      }, this), \" \", todo.image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: todo.image,\n        alt: todo.title,\n        style: {\n          width: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 39\n      }, this), \" \"]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 38\n    }, this)), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 14\n  }, this);\n}\n_s(TodoList, \"tP+6C5plfRwxqCbBj3cMUcL7Opk=\", false, function () {\n  return [useQuery];\n});\n_c = TodoList;\nfunction TodoForm() {\n  _s2();\n  const [addTodo] = useMutation(ADD_TODO);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const title = event.target.title.value;\n    const description = event.target.description.value;\n    const time = new Date().toISOString();\n    const image = \"\"; // Add your image handling here\n    await addTodo({\n      variables: {\n        title,\n        description,\n        time,\n        image\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"title\",\n      placeholder: \"Title\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"description\",\n      placeholder: \"Description\",\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \" Add Todo \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 18\n  }, this);\n}\n_s2(TodoForm, \"YkAyGXetDJOO19DxU8fZe8pVmwM=\", false, function () {\n  return [useMutation];\n});\n_c2 = TodoForm;\nfunction App() {\n  _s3();\n  useEffect(() => {\n    const keycloak = new Keycloak({\n      url: 'http://localhost:8080/auth',\n      realm: 'ToDoRealm',\n      clientId: 'todo-client'\n    });\n    keycloak.init({\n      onLoad: 'login-required'\n    }).then(authenticated => {\n      console.log('Authenticated:', authenticated);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: client,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" To - Do List \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), \" \", /*#__PURE__*/_jsxDEV(TodoList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 38\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 18\n  }, this);\n}\n_s3(App, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"TodoList\");\n$RefreshReg$(_c2, \"TodoForm\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","ApolloClient","InMemoryCache","ApolloProvider","gql","useMutation","useQuery","Keycloak","jsxDEV","_jsxDEV","client","uri","cache","GET_TODOS","ADD_TODO","TodoList","_s","data","loading","error","children","fileName","_jsxFileName","lineNumber","columnNumber","message","todos","map","todo","title","description","time","image","src","alt","style","width","id","_c","TodoForm","_s2","addTodo","handleSubmit","event","preventDefault","target","value","Date","toISOString","variables","onSubmit","name","placeholder","required","type","_c2","App","_s3","keycloak","url","realm","clientId","init","onLoad","then","authenticated","console","log","_c3","$RefreshReg$"],"sources":["C:/Users/saksh/Downloads/FLASK-REACT-TODO/client/src/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { ApolloClient, InMemoryCache, ApolloProvider, gql, useMutation, useQuery } from '@apollo/client';\nimport Keycloak from 'keycloak-js';\n\nconst client = new ApolloClient({\n    uri: 'http://localhost:5000/graphql',\n    cache: new InMemoryCache(),\n});\n\nconst GET_TODOS = gql `\n  query {\n    todos {\n      id\n      title\n      description\n      time\n      image\n    }\n  }\n`;\n\nconst ADD_TODO = gql `\n  mutation AddTodo($title: String!, $description: String!, $time: DateTime!, $image: String) {\n    addTodo(title: $title, description: $description, time: $time, image: $image) {\n      id\n      title\n      description\n      time\n      image\n    }\n  }\n`;\n\nfunction TodoList() {\n    const { data, loading, error } = useQuery(GET_TODOS);\n\n    if (loading) return <p > Loading... < /p>;\n    if (error) return <p > Error: { error.message } < /p>;\n\n    return ( <\n        div > {\n            data.todos.map(todo => ( <\n                    div key = { todo.id } >\n                    <\n                    h3 > { todo.title } < /h3> <\n                    p > { todo.description } < /p> <\n                    p > { todo.time } < /p> {\n                        todo.image && < img src = { todo.image }\n                        alt = { todo.title }\n                        style = {\n                            { width: '100px' } }\n                        />} <\n                        /div>\n                    ))\n            } <\n            /div>\n        );\n    }\n\n    function TodoForm() {\n        const [addTodo] = useMutation(ADD_TODO);\n        const handleSubmit = async(event) => {\n            event.preventDefault();\n            const title = event.target.title.value;\n            const description = event.target.description.value;\n            const time = new Date().toISOString();\n            const image = \"\"; // Add your image handling here\n            await addTodo({ variables: { title, description, time, image } });\n        };\n\n        return ( <\n            form onSubmit = { handleSubmit } >\n            <\n            input name = \"title\"\n            placeholder = \"Title\"\n            required / >\n            <\n            textarea name = \"description\"\n            placeholder = \"Description\"\n            required / >\n            <\n            button type = \"submit\" > Add Todo < /button> <\n            /form>\n        );\n    }\n\n    function App() {\n        useEffect(() => {\n            const keycloak = new Keycloak({\n                url: 'http://localhost:8080/auth',\n                realm: 'ToDoRealm',\n                clientId: 'todo-client',\n            });\n\n            keycloak.init({ onLoad: 'login-required' }).then(authenticated => {\n                console.log('Authenticated:', authenticated);\n            });\n        }, []);\n\n        return ( <\n            ApolloProvider client = { client } >\n            <\n            h1 > To - Do List < /h1> <\n            TodoList / >\n            <\n            TodoForm / >\n            <\n            /ApolloProvider>\n        );\n    }\n\n    export default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}